// <auto-generated />
using System;
using ATSB.Api.Areas.Identity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ATSB.Migrations
{
    [DbContext(typeof(ATSBIdentityDbContext))]
    [Migration("20230104040945_AlterUserAtsb")]
    partial class AlterUserAtsb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParCalificacionriesgo", b =>
                {
                    b.Property<int>("CodigoEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Comp")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Fitch")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("idUsuario");

                    b.Property<string>("Moody")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Sp")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("SP");

                    b.HasKey("CodigoEmpresa", "Id");

                    b.ToTable("PAR_CALIFICACIONRIESGO", (string)null);
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParConsecutivo", b =>
                {
                    b.Property<int>("CodigoEmpresa")
                        .HasColumnType("int")
                        .HasComment("1-Empresa");

                    b.Property<string>("IdConsecutivo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasComment("2-Id");

                    b.Property<int>("NumeroConsecutivo")
                        .HasColumnType("int")
                        .HasComment("3-Descripción");

                    b.HasKey("CodigoEmpresa", "IdConsecutivo");

                    b.ToTable("PAR_CONSECUTIVO", (string)null);

                    b.HasComment("Tabla ParConsecutivo");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParEmpresa", b =>
                {
                    b.Property<int>("CodigoEmpresa")
                        .HasColumnType("int")
                        .HasComment("1-Código");

                    b.Property<int?>("CantidadModificaciones")
                        .HasColumnType("int")
                        .HasComment("0-NoAplica");

                    b.Property<string>("CodigoBancoRegulador")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("CodigoEstado")
                        .HasColumnType("int")
                        .HasComment("10-Estado");

                    b.Property<int>("CodigoPais")
                        .HasColumnType("int")
                        .HasComment("5-País");

                    b.Property<int>("CodigoTipoIdentificacion")
                        .HasColumnType("int")
                        .HasComment("3-Tipo Id");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime")
                        .HasComment("8-Fecha Ingreso");

                    b.Property<DateTime?>("FechaUltimaModificacion")
                        .HasColumnType("datetime")
                        .HasComment("11-Ultima Modificación");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("idUsuario")
                        .HasComment("9-Usuario Ingreso");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("2-Nombre");

                    b.Property<string>("NumeroId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasComment("4-# Identificación");

                    b.Property<string>("Telefono1")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasComment("6-Teléfono");

                    b.Property<string>("Telefono2")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasComment("7-Teléfono");

                    b.Property<string>("UsuarioModifica")
                        .HasColumnType("text")
                        .HasComment("12-Usuario Ultima Modficación");

                    b.HasKey("CodigoEmpresa");

                    b.HasIndex("CodigoEstado");

                    b.HasIndex("CodigoPais");

                    b.HasIndex("CodigoTipoIdentificacion", "CodigoPais");

                    b.ToTable("PAR_EMPRESA", (string)null);

                    b.HasComment("Tabla ParEmpresa");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParEstado", b =>
                {
                    b.Property<int>("CodigoEstado")
                        .HasColumnType("int")
                        .HasComment("1-Código");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasComment("2-Descripción");

                    b.HasKey("CodigoEstado");

                    b.ToTable("PAR_ESTADO", (string)null);

                    b.HasComment("Tabla ParEstado");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParMonedum", b =>
                {
                    b.Property<int>("CodigoEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("CodigoMoneda")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("DescripcionCorta")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("idUsuario");

                    b.HasKey("CodigoEmpresa", "CodigoMoneda");

                    b.ToTable("PAR_MONEDA", (string)null);
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParPai", b =>
                {
                    b.Property<int>("CodigoPais")
                        .HasColumnType("int")
                        .HasComment("1-Código");

                    b.Property<string>("CodigoIsoalfa2")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("CodigoISOAlfa2")
                        .HasComment("4-ISO Alfa2");

                    b.Property<string>("CodigoIsoalfa3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("CodigoISOAlfa3")
                        .HasComment("5-ISO Alfa3");

                    b.Property<int?>("CodigoIsonumerico")
                        .HasColumnType("int")
                        .HasColumnName("CodigoISONumerico")
                        .HasComment("3-ISO Númerico");

                    b.Property<string>("FormatoTelefonoCelular")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasComment("7-Formato Teléfono Celular");

                    b.Property<string>("FormatoTelefonoFijo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasComment("6-Formato Teléfono Fijo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasComment("2-Nombre");

                    b.HasKey("CodigoPais");

                    b.ToTable("PAR_PAIS", (string)null);

                    b.HasComment("Tabla ParPais");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParProceso", b =>
                {
                    b.Property<int>("CodigoProceso")
                        .HasColumnType("int");

                    b.Property<int>("CodigoEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombreProceso")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("TablaDestino")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("CodigoProceso", "CodigoEmpresa");

                    b.HasIndex("CodigoEmpresa");

                    b.ToTable("PAR_PROCESO", (string)null);
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParSucursal", b =>
                {
                    b.Property<int>("CodigoEmpresa")
                        .HasColumnType("int")
                        .HasComment("1-Empresa");

                    b.Property<int>("CodigoBanco")
                        .HasColumnType("int")
                        .HasComment("10-Centro de Costo");

                    b.Property<int>("CodigoSucursal")
                        .HasColumnType("int")
                        .HasComment("2-Código");

                    b.Property<int?>("CargoResposable")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoEstado")
                        .HasColumnType("int");

                    b.Property<string>("CodigoOrigen")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasComment("4-País");

                    b.Property<int?>("CodigoPais")
                        .HasColumnType("int")
                        .HasComment("6-Cantón");

                    b.Property<int?>("CodigoSubsidiaria")
                        .HasColumnType("int")
                        .HasComment("5-Provincia");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasComment("7-Dirección");

                    b.Property<string>("Encargado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasComment("8-Encargado");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasComment("9-Teléfono");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("idUsuario")
                        .HasComment("0-No Aplica");

                    b.Property<string>("NombreResponsable")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("NombreSucursal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasComment("3-Nombre");

                    b.Property<string>("Telefono1")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasComment("9-Teléfono");

                    b.Property<string>("Telefono2")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasComment("9-Teléfono");

                    b.Property<int?>("TipoEstablecimiento")
                        .HasColumnType("int")
                        .HasComment("6-Cantón");

                    b.HasKey("CodigoEmpresa", "CodigoBanco", "CodigoSucursal");

                    b.HasIndex("CodigoEstado");

                    b.ToTable("PAR_SUCURSAL", (string)null);
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParTipocambio", b =>
                {
                    b.Property<int>("CodigoEmpresa")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("CodigoMoneda")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<double?>("TipoCambio")
                        .HasColumnType("float");

                    b.HasKey("CodigoEmpresa", "Fecha", "CodigoMoneda");

                    b.HasIndex("CodigoEmpresa", "CodigoMoneda");

                    b.ToTable("PAR_TIPOCAMBIO", (string)null);
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParTipoidentificacion", b =>
                {
                    b.Property<int>("CodigoTipoIdentificacion")
                        .HasColumnType("int")
                        .HasComment("2-Código");

                    b.Property<int>("CodigoPais")
                        .HasColumnType("int")
                        .HasComment("1-País");

                    b.Property<int?>("CantidadModificaciones")
                        .HasColumnType("int")
                        .HasComment("0-NoAplica");

                    b.Property<string>("CodigoFacturaElectronica")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasComment("9-Código Factura Electrónica");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasComment("3-Descripcion");

                    b.Property<DateTime?>("FechaUltimaModificacion")
                        .HasColumnType("datetime")
                        .HasComment("7-Ultima Modificación");

                    b.Property<string>("Formato")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasComment("4-Formato");

                    b.Property<bool?>("IndicadorFisica")
                        .HasColumnType("bit")
                        .HasComment("6-Es Física");

                    b.Property<int?>("Longitud")
                        .HasColumnType("int")
                        .HasComment("5-Longitud");

                    b.Property<string>("UsuarioModifica")
                        .HasColumnType("text")
                        .HasComment("8-Usuario Modificación");

                    b.HasKey("CodigoTipoIdentificacion", "CodigoPais");

                    b.HasIndex("CodigoPais");

                    b.ToTable("PAR_TIPOIDENTIFICACION", (string)null);

                    b.HasComment("Tabla ParTipoIdentificacion");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParTipoorigendato", b =>
                {
                    b.Property<int>("CodigoOrigenDatos")
                        .HasColumnType("int");

                    b.Property<int>("CodigoEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("DelimitadorDatos")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CodigoOrigenDatos", "CodigoEmpresa");

                    b.HasIndex("CodigoEmpresa");

                    b.ToTable("PAR_TIPOORIGENDATOS", (string)null);
                });

            modelBuilder.Entity("ATSB.Api.Areas.Identity.Entities.Security.UserAtsb", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Apellido1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserAtsb", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParCalificacionriesgo", b =>
                {
                    b.HasOne("ATSB.Api.Areas.Entities.Parametros.ParEmpresa", "CodigoEmpresaNavigation")
                        .WithMany("ParCalificacionriesgos")
                        .HasForeignKey("CodigoEmpresa")
                        .IsRequired()
                        .HasConstraintName("PAR_EMPRESA_PAR_CALIFICACIONRIESGO");

                    b.Navigation("CodigoEmpresaNavigation");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParConsecutivo", b =>
                {
                    b.HasOne("ATSB.Api.Areas.Entities.Parametros.ParEmpresa", "CodigoEmpresaNavigation")
                        .WithMany("ParConsecutivos")
                        .HasForeignKey("CodigoEmpresa")
                        .IsRequired()
                        .HasConstraintName("PAR_EMPRESA_PAR_CONSECUTIVO");

                    b.Navigation("CodigoEmpresaNavigation");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParEmpresa", b =>
                {
                    b.HasOne("ATSB.Api.Areas.Entities.Parametros.ParEstado", "CodigoEstadoNavigation")
                        .WithMany("ParEmpresas")
                        .HasForeignKey("CodigoEstado")
                        .IsRequired()
                        .HasConstraintName("PAR_ESTADO_PAR_EMPRESA");

                    b.HasOne("ATSB.Api.Areas.Entities.Parametros.ParPai", "CodigoPaisNavigation")
                        .WithMany("ParEmpresas")
                        .HasForeignKey("CodigoPais")
                        .IsRequired()
                        .HasConstraintName("PAR_PAIS_PAR_EMPRESA");

                    b.HasOne("ATSB.Api.Areas.Entities.Parametros.ParTipoidentificacion", "Codigo")
                        .WithMany("ParEmpresas")
                        .HasForeignKey("CodigoTipoIdentificacion", "CodigoPais")
                        .IsRequired()
                        .HasConstraintName("PAR_TIPOIDENTIFICACION_PAR_EMPRESA");

                    b.Navigation("Codigo");

                    b.Navigation("CodigoEstadoNavigation");

                    b.Navigation("CodigoPaisNavigation");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParMonedum", b =>
                {
                    b.HasOne("ATSB.Api.Areas.Entities.Parametros.ParEmpresa", "CodigoEmpresaNavigation")
                        .WithMany("ParMoneda")
                        .HasForeignKey("CodigoEmpresa")
                        .IsRequired()
                        .HasConstraintName("PAR_EMPRESA_PAR_MONEDA");

                    b.Navigation("CodigoEmpresaNavigation");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParProceso", b =>
                {
                    b.HasOne("ATSB.Api.Areas.Entities.Parametros.ParEmpresa", "CodigoEmpresaNavigation")
                        .WithMany("ParProcesos")
                        .HasForeignKey("CodigoEmpresa")
                        .IsRequired()
                        .HasConstraintName("PAR_EMPRESA_PAR_PROCESO");

                    b.Navigation("CodigoEmpresaNavigation");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParSucursal", b =>
                {
                    b.HasOne("ATSB.Api.Areas.Entities.Parametros.ParEmpresa", "CodigoEmpresaNavigation")
                        .WithMany("ParSucursals")
                        .HasForeignKey("CodigoEmpresa")
                        .IsRequired()
                        .HasConstraintName("PAR_EMPRESA_PAR_SUCURSAL");

                    b.HasOne("ATSB.Api.Areas.Entities.Parametros.ParEstado", "CodigoEstadoNavigation")
                        .WithMany("ParSucursals")
                        .HasForeignKey("CodigoEstado")
                        .HasConstraintName("PAR_ESTADO_PAR_SUCURSAL");

                    b.Navigation("CodigoEmpresaNavigation");

                    b.Navigation("CodigoEstadoNavigation");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParTipocambio", b =>
                {
                    b.HasOne("ATSB.Api.Areas.Entities.Parametros.ParEmpresa", "CodigoEmpresaNavigation")
                        .WithMany("ParTipocambios")
                        .HasForeignKey("CodigoEmpresa")
                        .IsRequired()
                        .HasConstraintName("PAR_EMPRESA_PAR_TIPOCAMBIO");

                    b.HasOne("ATSB.Api.Areas.Entities.Parametros.ParMonedum", "Codigo")
                        .WithMany("ParTipocambios")
                        .HasForeignKey("CodigoEmpresa", "CodigoMoneda")
                        .IsRequired()
                        .HasConstraintName("PAR_MONEDA_PAR_TIPOCAMBIO");

                    b.Navigation("Codigo");

                    b.Navigation("CodigoEmpresaNavigation");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParTipoidentificacion", b =>
                {
                    b.HasOne("ATSB.Api.Areas.Entities.Parametros.ParPai", "CodigoPaisNavigation")
                        .WithMany("ParTipoidentificacions")
                        .HasForeignKey("CodigoPais")
                        .IsRequired()
                        .HasConstraintName("PAR_PAIS_PAR_TIPOIDENTIFICACION");

                    b.Navigation("CodigoPaisNavigation");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParTipoorigendato", b =>
                {
                    b.HasOne("ATSB.Api.Areas.Entities.Parametros.ParEmpresa", "CodigoEmpresaNavigation")
                        .WithMany("ParTipoorigendatos")
                        .HasForeignKey("CodigoEmpresa")
                        .IsRequired()
                        .HasConstraintName("PAR_EMPRESA_PAR_TIPOORIGENDATOS");

                    b.Navigation("CodigoEmpresaNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ATSB.Api.Areas.Identity.Entities.Security.UserAtsb", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ATSB.Api.Areas.Identity.Entities.Security.UserAtsb", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATSB.Api.Areas.Identity.Entities.Security.UserAtsb", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ATSB.Api.Areas.Identity.Entities.Security.UserAtsb", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParEmpresa", b =>
                {
                    b.Navigation("ParCalificacionriesgos");

                    b.Navigation("ParConsecutivos");

                    b.Navigation("ParMoneda");

                    b.Navigation("ParProcesos");

                    b.Navigation("ParSucursals");

                    b.Navigation("ParTipocambios");

                    b.Navigation("ParTipoorigendatos");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParEstado", b =>
                {
                    b.Navigation("ParEmpresas");

                    b.Navigation("ParSucursals");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParMonedum", b =>
                {
                    b.Navigation("ParTipocambios");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParPai", b =>
                {
                    b.Navigation("ParEmpresas");

                    b.Navigation("ParTipoidentificacions");
                });

            modelBuilder.Entity("ATSB.Api.Areas.Entities.Parametros.ParTipoidentificacion", b =>
                {
                    b.Navigation("ParEmpresas");
                });
#pragma warning restore 612, 618
        }
    }
}
